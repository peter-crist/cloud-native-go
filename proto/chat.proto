syntax = "proto3";
package chat;

option go_package = "./chat";

import "google/api/annotations.proto";

service Chat {
    rpc Send(SendRequest) returns (SendResponse) {}
    rpc DemoCircuitBreaker(CircuitBreakerRequest) returns (CircuitBreakerResponse) {}
    rpc DemoDebounce(DebounceRequest) returns (DebounceResponse) {}
    rpc DemoRetry(RetryRequest) returns (RetryResponse) {}
    rpc DemoThrottle(ThrottleRequest) returns (ThrottleResponse) {
        option (google.api.http) = {
            post: "/v1/chat"
            body: "*"
          };
    }
    rpc DemoTimeout(TimeoutRequest) returns (TimeoutResponse) {}
    rpc DemoFanIn(FanInRequest) returns (FanInResponse) {}
    rpc DemoFanOut(FanOutRequest) returns (FanOutResponse) {}
    rpc DemoTimeoutAndRetry(TimeoutAndRetryRequest) returns (TimeoutAndRetryResponse) {}
}

message SendRequest {
    string message = 1;
}

message SendResponse {
    string message = 1;
    string sha = 2;
}

message CircuitBreakerRequest {
    int32 failureThreshold = 1;
    int32 attempts = 2;
    int32 timeout = 3;
}

message CircuitBreakerResponse {
    string message = 1;
}

message DebounceRequest {
    int32 duration = 1;
    int32 attempts = 2;
    int32 delay = 3;
}

message DebounceResponse {
    string message = 1;
}

message RetryRequest {
    int32 count = 1;
    int32 delay = 2;
}

message RetryResponse {
    string message = 1;
}

message ThrottleRequest {
    int32 attempts = 1;
    int32 max = 2;
    int32 refill = 3;
    int32 duration = 4;
}

message ThrottleResponse {
    string message = 1;
}

message TimeoutRequest {
    int32 duration = 1;
    int32 timeout = 2;
}

message TimeoutResponse {
    string message = 1;
}

message FanInRequest {
    int32 source_count = 1;
}

message FanInResponse {
    string message = 1;
}

message FanOutRequest {
    int32 source_count = 1;
    int32 destination_count = 2;
}

message FanOutResponse {
    string message = 1;
}

message TimeoutAndRetryRequest {
    int32 count = 1;
    int32 delay = 2;
    int32 duration = 3;
    int32 timeout = 4;
}

message TimeoutAndRetryResponse {
    string message = 1;
}